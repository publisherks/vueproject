@charset "UTF-8";

$colors-default: (
    main-color : #4971ff,
    sub-btn1-color : #733dec,
    sub-btn2-color : #c045e3,
    btn-shadow : rgba(0, 0, 0, 0.64),
    btn-disable-color : #322d3a,
    gray-color : #6a6571,
    gray-color-active : rgba(106, 101, 113, 0.64),
    red-color : #f43827,
    red-color-active : rgba(244, 56, 39, 0.64),
    bg-color : #15141b,
    content-bg-color : #231f29,
    text-color1 : #ffffff,
    text-color2 : #d0cdd5,
    text-color3 : #9d98a4,
    text-disable-color : #6a6571,
    table-th-color : #342f3a,
    border-color : #484251,
    box-shadow : #000000,
    modal-border : #2f2b35,
    item-selected-th: #363449,
    item-selected-td: #26253a,
    violet-color : #5a3f6a,
    violet-color2 : #ce42f6,
    green-color : #41c800,
    slated-color : #6a83b5,
    confirmation-color : #00aeff,
    undecided-color : #ffba00,
    complete-color : #00aeff,
    total-color : #15141b,
);

@function hexToRGB($hex) {
    @return red($hex),green($hex),blue($hex);
}

@mixin generate_colors($colors) {

    // Colors
    @each $color, $value in $colors {
        @if str-slice(#{$value}, 1, 1)=="#" {
            --#{$color}: #{$value};
        }

        @else if str-slice(#{$value}, 1, 4)=="rgba" {
            --#{$color}: #{$value};
        }

        @else {
            --#{$color}: var(--#{$value});
        }
    }

    // RGB Colors
    @each $color, $value in $colors {
        @if str-slice(#{$value}, 1, 1)=="#" {
            --RGB-#{$color}: #{hexToRGB($value)};
        }

        @else if str-slice(#{$value}, 1, 4)=="rgba" {
            --RGB-#{$color}: #{$value};
        }

        @else {
            --RGB-#{$color}: var(--RGB-#{$value});
        }
    }
}

[data-theme="default"] {
    @include generate_colors($colors-default);
}

// [data-theme="light"] {
//     @include generate_colors($colors-light);
// }
